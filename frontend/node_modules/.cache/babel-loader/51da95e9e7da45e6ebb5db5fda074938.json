{"ast":null,"code":"var _jsxFileName = \"/Users/huiren/Downloads/trivia_api/frontend/src/components/FormView.js\";\nimport React, { Component } from 'react';\nimport $ from 'jquery';\nimport '../stylesheets/FormView.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass FormView extends Component {\n  constructor(props) {\n    super();\n\n    this.submitQuestion = event => {\n      event.preventDefault();\n      $.ajax({\n        url: '/questions',\n        //TODO: update request URL\n        type: \"POST\",\n        dataType: 'json',\n        contentType: 'application/json',\n        data: JSON.stringify({\n          question: this.state.question,\n          answer: this.state.answer,\n          difficulty: this.state.difficulty,\n          category: this.state.category\n        }),\n        xhrFields: {\n          withCredentials: true\n        },\n        crossDomain: true,\n        success: result => {\n          document.getElementById(\"add-question-form\").reset();\n          return;\n        },\n        error: error => {\n          alert('Unable to add question. Please try your request again');\n          return;\n        }\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      question: \"\",\n      answer: \"\",\n      difficulty: 1,\n      category: 1,\n      categories: {}\n    };\n  }\n\n  componentDidMount() {\n    $.ajax({\n      url: `/categories`,\n      //TODO: update request URL\n      type: \"GET\",\n      success: result => {\n        this.setState({\n          categories: result.categories\n        });\n        return;\n      },\n      error: error => {\n        alert('Unable to load categories. Please try your request again');\n        return;\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"add-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add a New Trivia Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form-view\",\n        id: \"add-question-form\",\n        onSubmit: this.submitQuestion,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Question\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"question\",\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Answer\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"answer\",\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Difficulty\", /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"difficulty\",\n            onChange: this.handleChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"1\",\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"2\",\n              children: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"3\",\n              children: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"4\",\n              children: \"4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"5\",\n              children: \"5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Category\", /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"category\",\n            onChange: this.handleChange,\n            children: Object.keys(this.state.categories).map(id => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: id,\n                children: this.state.categories[id]\n              }, id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          className: \"button\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default FormView;","map":{"version":3,"sources":["/Users/huiren/Downloads/trivia_api/frontend/src/components/FormView.js"],"names":["React","Component","$","FormView","constructor","props","submitQuestion","event","preventDefault","ajax","url","type","dataType","contentType","data","JSON","stringify","question","state","answer","difficulty","category","xhrFields","withCredentials","crossDomain","success","result","document","getElementById","reset","error","alert","handleChange","setState","target","name","value","categories","componentDidMount","render","Object","keys","map","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport $ from 'jquery';\n\nimport '../stylesheets/FormView.css';\n\nclass FormView extends Component {\n  constructor(props){\n    super();\n    this.state = {\n      question: \"\",\n      answer: \"\",\n      difficulty: 1,\n      category: 1,\n      categories: {}\n    }\n  }\n\n  componentDidMount(){\n    $.ajax({\n      url: `/categories`, //TODO: update request URL\n      type: \"GET\",\n      success: (result) => {\n        this.setState({ categories: result.categories })\n        return;\n      },\n      error: (error) => {\n        alert('Unable to load categories. Please try your request again')\n        return;\n      }\n    })\n  }\n\n\n  submitQuestion = (event) => {\n    event.preventDefault();\n    $.ajax({\n      url: '/questions', //TODO: update request URL\n      type: \"POST\",\n      dataType: 'json',\n      contentType: 'application/json',\n      data: JSON.stringify({\n        question: this.state.question,\n        answer: this.state.answer,\n        difficulty: this.state.difficulty,\n        category: this.state.category\n      }),\n      xhrFields: {\n        withCredentials: true\n      },\n      crossDomain: true,\n      success: (result) => {\n        document.getElementById(\"add-question-form\").reset();\n        return;\n      },\n      error: (error) => {\n        alert('Unable to add question. Please try your request again')\n        return;\n      }\n    })\n  }\n\n  handleChange = (event) => {\n    this.setState({[event.target.name]: event.target.value})\n  }\n\n  render() {\n    return (\n      <div id=\"add-form\">\n        <h2>Add a New Trivia Question</h2>\n        <form className=\"form-view\" id=\"add-question-form\" onSubmit={this.submitQuestion}>\n          <label>\n            Question\n            <input type=\"text\" name=\"question\" onChange={this.handleChange}/>\n          </label>\n          <label>\n            Answer\n            <input type=\"text\" name=\"answer\" onChange={this.handleChange}/>\n          </label>\n          <label>\n            Difficulty\n            <select name=\"difficulty\" onChange={this.handleChange}>\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n            </select>\n          </label>\n          <label>\n            Category\n            <select name=\"category\" onChange={this.handleChange}>\n              {Object.keys(this.state.categories).map(id => {\n                  return (\n                    <option key={id} value={id}>{this.state.categories[id]}</option>\n                  )\n                })}\n            </select>\n          </label>\n          <input type=\"submit\" className=\"button\" value=\"Submit\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default FormView;\n"]},"metadata":{},"sourceType":"module"}